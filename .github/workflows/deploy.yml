on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Extract Firebase and Discord values from secrets
        run: |
          # Scriviamo i secret in modo corretto per evitare problemi di escape
          printf '%s' '${{ secrets.FIREBASE_DETAILS }}' > firebase.json
          printf '%s' '${{ secrets.DISCORD_DETAILS }}' > discord.json

          # Debug per vedere il contenuto (non funzionerÃ  per GitHub Secrets mascherati)
          cat firebase.json
          cat discord.json

          # Verifica che i file siano JSON validi
          jq empty firebase.json || { echo "Invalid JSON in firebase.json"; exit 1; }
          jq empty discord.json || { echo "Invalid JSON in discord.json"; exit 1; }

          # Estrazione delle variabili d'ambiente da JSON
          echo "FIREBASE_API_KEY=$(jq -r '.apiKey' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_AUTH_DOMAIN=$(jq -r '.authDomain' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_PROJECT_ID=$(jq -r '.projectId' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_STORAGE_BUCKET=$(jq -r '.storageBucket' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_MESSAGING_SENDER_ID=$(jq -r '.messagingSenderId' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_APP_ID=$(jq -r '.appId' firebase.json)" >> $GITHUB_ENV
          echo "FIREBASE_MEASUREMENT_ID=$(jq -r '.measurementId' firebase.json)" >> $GITHUB_ENV

          echo "DISCORD_REDIRECT_URL=$(jq -r '.redirectUrl' discord.json)" >> $GITHUB_ENV
          echo "DISCORD_CLIENT_ID=$(jq -r '.clientId' discord.json)" >> $GITHUB_ENV
          echo "DISCORD_CLIENT_SECRET=$(jq -r '.clientSecret' discord.json)" >> $GITHUB_ENV
          echo "DISCORD_GUILD_ID=$(jq -r '.guildId' discord.json)" >> $GITHUB_ENV
          echo "DISCORD_LOGIN_URL=$(jq -r '.loginDiscord' discord.json)" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm install -g @angular/cli
          npm install

      - name: Build the app
        run: |
          echo "Building the app with Firebase and Discord configs"
          npm run build -- --configuration production

      



# name: Deploy Production

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20.x

#       - name: Replace Environment Variables
#         run: |
#           node ../scripts/replace-env.js
#         env:
#           FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
#           FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
#           FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
#           FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
#           FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
#           FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
#           FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
#           DISCORD_REDIRECT_URL: ${{ secrets.DISCORD_REDIRECT_URL }}
#           DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
#           DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
#           DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
#           DISCORD_LOGIN_URL: ${{ secrets.DISCORD_LOGIN_URL }}
#           DISCORD_LOCAL_REDIRECT_URL: ${{ secrets.DISCORD_LOCAL_REDIRECT_URL }}
#           DISCORD_LOCAL_CLIENT_ID: ${{ secrets.DISCORD_LOCAL_CLIENT_ID }}
#           DISCORD_LOCAL_CLIENT_SECRET: ${{ secrets.DISCORD_LOCAL_CLIENT_SECRET }}
#           DISCORD_LOCAL_GUILD_ID: ${{ secrets.DISCORD_LOCAL_GUILD_ID }}
#           DISCORD_LOCAL_LOGIN_URL: ${{ secrets.DISCORD_LOCAL_LOGIN_URL }}

#       - name: Install Dependencies
#         run: npm install

#       - name: Build Angular
#         run: npm run build -- --configuration=production

#       - name: Build the app
#         run: |
#           echo "Building the app with Firebase and Discord configs"
#           npm run build -- --configuration production
